{"version":3,"sources":["App.tsx","components/ListOfGoods/ListOfGoods.tsx","index.tsx"],"names":["SortType","ListOfGoods","goods","this","props","map","good","React","PureComponent","goodsFromServer","getReorderedGoods","sortType","isReversed","visibleGoods","ALPABET","sort","goodA","goodB","localeCompare","LENGTH","length","reverse","console","log","App","state","NONE","handleSortByAlpabet","setState","handleSortByLength","handleReverse","handleReset","onReorder","className","type","classNames","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAqBKA,E,wGCfQC,EAAb,4JACE,WACE,IAAQC,EAAUC,KAAKC,MAAfF,MAER,OACE,6BACGA,EAAMG,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YAPlC,GAAiCC,IAAMC,eDE1BC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdR,EADK,GAGJ,IADCS,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOX,GAGzB,OAAQS,GACN,KAAKX,EAASc,QACZD,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACxD,MACF,KAAKjB,EAASmB,OACZN,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAY7D,OAPIR,GACFC,EAAaQ,UAIfC,QAAQC,IAAIZ,EAAUC,GAEfC,G,SArCJb,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA8CE,IAAMwB,EAAb,4MACEC,MAAkC,CAChCd,SAAUX,EAAS0B,KACnBd,YAAY,GAHhB,EAMEe,oBAAsB,kBAAM,EAAKC,SAAS,CAAEjB,SAAUX,EAASc,WANjE,EAQEe,mBAAqB,kBAAM,EAAKD,SAAS,CAAEjB,SAAUX,EAASmB,UARhE,EAUEW,cAAgB,kBAAO,EAAKF,UAAS,SAAAH,GAAK,MAAK,CAC7Cb,YAAaa,EAAMb,gBAXvB,EAcEmB,YAAc,kBAAO,EAAKH,SAAS,CACjCjB,SAAUX,EAAS0B,KACnBd,YAAY,KAhBhB,4CAmBE,WACE,MAAiCT,KAAKsB,MAA9Bd,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WACZoB,EAAarB,IAAaX,EAAS0B,MAAQd,EAEjD,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYxB,IAAaX,EAASc,UAEtCsB,QAASjC,KAAKwB,oBANhB,iCAWA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYxB,IAAaX,EAASmB,SAEtCiB,QAASjC,KAAK0B,mBANhB,4BAWA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAavB,IAEjBwB,QAASjC,KAAK2B,cANhB,qBAWCE,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAASjC,KAAK4B,YAHhB,sBAUJ,cAAC,EAAD,CAAa7B,MAAOQ,EAAkBD,EAAiBN,KAAKsB,gBAtEpE,GAAyBlB,IAAM8B,WEhE/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.71ef12a2.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport { ListOfGoods } from './components/ListOfGoods';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods.sort((goodA, goodB) => goodA.localeCompare(goodB));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((goodA, goodB) => goodA.length - goodB.length);\n      break;\n    default:\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\n// type State = {\n//   isReversed: boolean,\n//   sortType: SortType,\n// };\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  state: Readonly<ReorderOptions> = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  handleSortByAlpabet = () => this.setState({ sortType: SortType.ALPABET });\n\n  handleSortByLength = () => this.setState({ sortType: SortType.LENGTH });\n\n  handleReverse = () => (this.setState(state => ({\n    isReversed: !state.isReversed,\n  })));\n\n  handleReset = () => (this.setState({\n    sortType: SortType.NONE,\n    isReversed: false,\n  }));\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const onReorder = (sortType !== SortType.NONE || isReversed);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPABET },\n            )}\n            onClick={this.handleSortByAlpabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.handleSortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n\n          {onReorder && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ListOfGoods goods={getReorderedGoods(goodsFromServer, this.state)} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport class ListOfGoods extends React.PureComponent<Props> {\n  render() {\n    const { goods } = this.props;\n\n    return (\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}