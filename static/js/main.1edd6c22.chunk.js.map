{"version":3,"sources":["App.tsx","components/ListOfGoods/ListOfGoods.tsx","index.tsx"],"names":["SortType","ListOfGoods","goods","this","props","map","good","React","PureComponent","goodsFromServer","App","state","sortType","NONE","isReversed","handleSortByAlpabet","setState","ALPABET","handleSortByLength","LENGTH","handleReverse","handleReset","onReorder","orderedGoods","visibleGoods","sort","goodA","goodB","localeCompare","length","reverse","getReorderedGoods","className","type","classNames","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAqBKA,E,wGCfQC,EAAb,4JACE,WACE,IAAQC,EAAUC,KAAKC,MAAfF,MAER,OACE,6BACGA,EAAMG,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YAPlC,GAAiCC,IAAMC,eDE1BC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGT,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA4CE,IAAMU,EAAb,4MACEC,MAAkC,CAChCC,SAAUZ,EAASa,KACnBC,YAAY,GAHhB,EAMEC,oBAAsB,kBAAM,EAAKC,SAAS,CAAEJ,SAAUZ,EAASiB,WANjE,EAQEC,mBAAqB,kBAAM,EAAKF,SAAS,CAAEJ,SAAUZ,EAASmB,UARhE,EAUEC,cAAgB,kBAAO,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CAC7CG,YAAaH,EAAMG,gBAXvB,EAcEO,YAAc,kBAAO,EAAKL,SAAS,CACjCJ,SAAUZ,EAASa,KACnBC,YAAY,KAhBhB,4CAmBE,WACE,MAAiCX,KAAKQ,MAA9BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WACZQ,EAAaV,IAAaZ,EAASa,MAAQC,EAC3CS,EAtDH,SACLrB,EADK,GAGJ,IADCU,EACF,EADEA,SAAUE,EACZ,EADYA,WAGNU,EAAY,YAAOtB,GAkBzB,OAhBAsB,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQf,GACN,KAAKZ,EAASiB,QACZ,OAAOS,EAAME,cAAcD,GAE7B,KAAK3B,EAASmB,OACZ,OAAOO,EAAMG,OAASF,EAAME,OAE9B,QAAS,OAAO,MAIhBf,GACFU,EAAaM,UAGRN,EA+BgBO,CAAkBtB,EAAiBN,KAAKQ,OAE7D,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYtB,IAAaZ,EAASiB,UAEtCkB,QAAShC,KAAKY,oBANhB,iCAWA,wBACEkB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYtB,IAAaZ,EAASmB,SAEtCgB,QAAShC,KAAKe,mBANhB,4BAWA,wBACEe,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAapB,IAEjBqB,QAAShC,KAAKiB,cANhB,qBAWCE,GACC,wBACEW,KAAK,SACLD,UAAU,4BACVG,QAAShC,KAAKkB,YAHhB,sBAUJ,cAAC,EAAD,CAAanB,MAAOqB,WAvE5B,GAAyBhB,IAAM6B,WE9D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1edd6c22.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport { ListOfGoods } from './components/ListOfGoods';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((goodA, goodB) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return goodA.localeCompare(goodB);\n\n      case SortType.LENGTH:\n        return goodA.length - goodB.length;\n\n      default: return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\n// type State = {\n//   isReversed: boolean,\n//   sortType: SortType,\n// };\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  state: Readonly<ReorderOptions> = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  handleSortByAlpabet = () => this.setState({ sortType: SortType.ALPABET });\n\n  handleSortByLength = () => this.setState({ sortType: SortType.LENGTH });\n\n  handleReverse = () => (this.setState(state => ({\n    isReversed: !state.isReversed,\n  })));\n\n  handleReset = () => (this.setState({\n    sortType: SortType.NONE,\n    isReversed: false,\n  }));\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const onReorder = (sortType !== SortType.NONE || isReversed);\n    const orderedGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPABET },\n            )}\n            onClick={this.handleSortByAlpabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.handleSortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n\n          {onReorder && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ListOfGoods goods={orderedGoods} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport class ListOfGoods extends React.PureComponent<Props> {\n  render() {\n    const { goods } = this.props;\n\n    return (\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}